GLSLPROGRAM

	#pragma kernel GLSLMatrixTranspose


	#version 450

	#define TRANSPOSE_BLOCK_SIZE 16


layout(std140) uniform CB {
	uint g_iLevel;
	uint g_iLevelMask;
	uint g_iWidth;
	uint g_iHeight;
};
	layout(std430, binding = 0) buffer Data {
		uint Data_buf[];
	};

	layout(std430, binding = 1) readonly buffer Input {
		uint Input_buf[];
	};


int u_xlati0;
ivec2 u_xlati1;


shared struct {
	uint value[1];
} TGSM0[TRANSPOSE_BLOCK_SIZE*TRANSPOSE_BLOCK_SIZE];

shared struct {
		uint value;
} transpose_shared_data[TRANSPOSE_BLOCK_SIZE * TRANSPOSE_BLOCK_SIZE];


layout(local_size_x = TRANSPOSE_BLOCK_SIZE, local_size_y = TRANSPOSE_BLOCK_SIZE, local_size_z = 1) in;
void main()
{
    u_xlati0 = int(gl_GlobalInvocationID.y) * int(g_iWidth) + int(gl_GlobalInvocationID.x);
    u_xlati0 = int(Input_buf[u_xlati0]);
    transpose_shared_data[gl_LocalInvocationIndex].value = uint(u_xlati0);

    memoryBarrierShared();
    barrier();

    u_xlati0 = int(gl_LocalInvocationID.x) * 16 + int(gl_LocalInvocationID.y);
    u_xlati0 = int(transpose_shared_data[u_xlati0].value);
    u_xlati1.xy = (-ivec2(gl_LocalInvocationID.yx)) + ivec2(gl_GlobalInvocationID.yx);
    u_xlati1.xy = u_xlati1.xy + ivec2(gl_LocalInvocationID.xy);
    u_xlati1.x = u_xlati1.y * int(g_iHeight) + u_xlati1.x;

    Data_buf[u_xlati1.x] = uint(u_xlati0);
    return;
}

ENDGLSL