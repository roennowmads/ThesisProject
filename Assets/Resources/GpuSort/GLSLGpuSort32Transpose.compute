GLSLPROGRAM
	#pragma kernel GLSLMatrixTranspose

	//#version 310 es
	#version 450

	#define TRANSPOSE_BLOCK_SIZE 16


	layout(std140) uniform CB {
		uint g_iLevel;
		uint g_iLevelMask;
		uint g_iWidth;
		uint g_iHeight;
	};

	layout(std430, binding = 0) buffer Data {
		uint Data_buf[];
	};

	layout(std430, binding = 1) readonly buffer Input {
		uint Input_buf[];
	};

	shared uint transpose_shared_data[TRANSPOSE_BLOCK_SIZE * TRANSPOSE_BLOCK_SIZE];

	layout(local_size_x = TRANSPOSE_BLOCK_SIZE, local_size_y = TRANSPOSE_BLOCK_SIZE, local_size_z = 1) in;
	void main()
	{
		transpose_shared_data[gl_LocalInvocationIndex] = Input_buf[gl_GlobalInvocationID.y * g_iWidth + gl_GlobalInvocationID.x];

		memoryBarrierShared();
		barrier();

		uvec2 XY = gl_GlobalInvocationID.yx - gl_LocalInvocationID.yx + gl_LocalInvocationID.xy;
		Data_buf[XY.y * g_iHeight + XY.x] = transpose_shared_data[gl_LocalInvocationID.x * uint(TRANSPOSE_BLOCK_SIZE) + gl_LocalInvocationID.y];
	}
ENDGLSL
